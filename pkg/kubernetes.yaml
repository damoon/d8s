apiVersion: v1
kind: Service
metadata:
  name: dind
spec:
  ports:
    - name: dind
      port: 2375
  selector:
    app: dind
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dind
spec:
  selector:
    matchLabels:
      app: dind
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: dind
    spec:
      shareProcessNamespace: true
      containers:
        - name: nurse
          image: ghcr.io/turbine-kreuzberg/dind-nurse:latest@sha256:c8ee9942b116bebde20defc2c5a4436fcb893b96b608f9801b833475090fffe1
          imagePullPolicy: Always
          args:
            - server
          ports:
            - name: nurse
              containerPort: 2375
          readinessProbe:
            httpGet:
              path: /_nurse_healthy
              port: 2375
          volumeMounts:
            - name: data
              mountPath: /var/lib/docker
        - name: dind
          image: docker:23.0.4-dind@sha256:c20b7d2415de59f308553646712d9b1d92f4186aeaf8b04afae7f42129dab425
          command:
            - sh
            - -c
          args:
            - |
              while true; do
                dockerd-entrypoint.sh dockerd \
                  --host=tcp://0.0.0.0:12375 \
                  --tls=false \
                  --mtu=1300 \
                  --insecure-registry=10.0.0.0/8 \
                  --insecure-registry=172.16.0.0/12 \
                  --insecure-registry=192.168.0.0/16 \
                  &> /dev/null
                date;
                echo restarted to avoid OOM during builds;
              done
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
            - name: DOCKER_BUILDKIT
              value: "1"
          securityContext: 
            privileged: true
          ports:
            - name: dind
              containerPort: 12375
          readinessProbe:
            httpGet:
              path: /_ping
              port: 12375
          volumeMounts:
            - name: data
              mountPath: /var/lib/docker
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: dind
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dind
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
